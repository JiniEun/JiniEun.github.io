<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Jin</title>
    <link>https://JiniEun.github.io/tags/react/</link>
    <description>Recent content in React on Jin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sun, 29 May 2022 23:20:17 +0900</lastBuildDate><atom:link href="https://JiniEun.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React vs Vue</title>
      <link>https://JiniEun.github.io/posts/react_vs_vue/</link>
      <pubDate>Sun, 29 May 2022 23:20:17 +0900</pubDate>
      
      <guid>https://JiniEun.github.io/posts/react_vs_vue/</guid>
      <description></description>
    </item>
    
    <item>
      <title>React Hooks : useEffect() 함수</title>
      <link>https://JiniEun.github.io/posts/react_useeffect/</link>
      <pubDate>Sun, 01 May 2022 14:46:09 +0900</pubDate>
      
      <guid>https://JiniEun.github.io/posts/react_useeffect/</guid>
      <description>React의 useEffect 함수는 리액트 컴포넌트가 랜더링 될 때마다 특정 작업(side effect)을 실행할 수 있도록 하는 Hook이다.
여기서 특정 작업은 component가 렌더링 된 이후에 비동기로 처리되어야 하는 부수적인 효과들을 말한다.
이러한 기능으로 인해 함수형 컴포넌트에서도 클래스형 컴포넌트에서 사용했던 생명주기 메서드를 사용할 수 있게 되었다고 한다.
 componentDidMount: 컴포넌트를 만들고, 첫 렌더링을 다 마친 후 실행. componentDidUpdate: 리렌더링을 완료한 후 실행. 즉 render()가 업데이트될 때마다 실행 compoenntWillUnMount: 컴포넌트를 DOM에서 제거할 때 실행.  useEffect는 component가 mount 됐을 때, component가 unmount 됐을 때, component가 update 됐을 때 특정 작업을 처리할 수 있다.</description>
    </item>
    
  </channel>
</rss>
